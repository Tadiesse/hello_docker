name: Deploy Images to GHCR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:

      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
        
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Build the image 
        working-directory: ./
        run: |
          docker build . --tag ghcr.io/tadiesse/hello-docker:latest
          #cosign sign --yes --key C:\Users\z004rwpj\Documents\Alex_tasks\actions-runner\cosign.key ghcr.io/tadiesse/hello-docker@sha256:d06630f27b5fe95c0ab371dbc7c1d7d4cbefbcc08a21da175477f8ee76100fd1
          

      - name: Build the Signature and  Push the image
        working-directory: C:\Users\z004rwpj\Documents\Alex_tasks\signserver-clientcli\signserver\bin\
        run: |
          cosign generate ghcr.io/tadiesse/hello-docker:latest > payload.json
          Get-Content payload.json | Get-FileHash -Algorithm SHA256 | ForEach-Object { $_.Hash } | Out-File -Encoding ASCII -FilePath payload.hash
          .\signclient signdocument -workername CosignIntegrationTest -infile payload.hash -outfile payload.sig -host signservice-playground.ct.siemens.com -port 443 -truststore truststore-playground.jks -truststorepwd $env:TRUSTSTORE_PASSWORD
          [convert]::ToBase64String([System.IO.File]::ReadAllBytes('payload.sig')) | Out-File -Encoding ASCII -FilePath payloadbase64.sig
          cosign attach signature --payload payload.json --signature payloadbase64.sig ghcr.io/tadiesse/hello-docker:latest
          docker push ghcr.io/tadiesse/hello-docker:latest
